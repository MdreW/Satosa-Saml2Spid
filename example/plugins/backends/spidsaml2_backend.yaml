module: backends.spidsaml2.SpidSAMLBackend
# module: backends.spidsaml2.SAMLBackend

name: spidSaml2
config:
  #idp_blacklist_file: /path/to/blacklist.json
  # make metadata downloadable from entityid url
  entityid_endpoint: true

  acr_mapping:
    "": 'https://www.spid.gov.it/SpidL2'
    # "https://identity.sieltecloud.it": 'https://www.spid.gov.it/SpidL1'
    # "https://idp.namirialtsp.com/idp": 'https://www.spid.gov.it/SpidL1'
    # "https://identity.infocert.it": 'https://www.spid.gov.it/SpidL1'

  sp_config:
    key_file: ./pki/backend.key
    cert_file: ./pki/backend.cert
    encryption_keypairs:
    - {'key_file': ./pki/backend.key, 'cert_file': ./pki/backend.cert}

    attribute_map_dir: 'attributes-map'

    organization: { display_name: [['Università della Calabria', 'it']], name: [['Unical', 'it']],  url: [['https://www.unical.it', 'it']]}
    contact_person:
    - {contact_type: technical, email_address: "mailto:spid-technicians@unical.it", given_name: Technical}
    - {contact_type: support, email_address: "mailto:spid-support@unical.it", given_name: Support}

    metadata:
      local: [/opt/satosa-saml2/metadata/]
      #local: [/opt/pyff/md/]
      # if mdq I get in djangosaml2 "SignatureError at /saml2/acs/: Signature missing for response"
      # probably some data is lost in metadata catalogue
      # local: [./metadata/idpspid1.xml]
      # using pyFF or other MDX server
      mdq:
        - url: "http://mdq.auth.unical.it/static/sha1"
      # mdq:
        # - url: "http://sp1.testunical.it:8001/"
          # cert: ukfederation-mdq.pem

    entityid: '<base_url>/<name>/metadata'
    accepted_time_diff: 10

    #10 days
    #valid_for: 1200

    service:
      sp:
        ui_info:
          display_name:
            - lang: it
              text: "Aggregatore SPID - Università della Calabria"
          description:
            - lang: it
              text: "Aggregatore SPID - Università della Calabria"
          # information_url:
            # - lang: en
              # text: "http://sp.information.url/"
          privacy_statement_url:
            - lang: it
              text: "https://www.unical.it/portale/ateneo/privacy/"
          keywords:
            - lang: it
              text: ["Unical SPID Authentication Proxy", "SP-IT"]
            #- lang: en
            #  text: ["Unical SPID Authentication Proxy", "SP-EN"]
          logo:
            text: "https://www.spid.gov.it/assets/img/spid-ico-circle-bb.svg"
            width: "100"
            height: "100"

        # sign dig and enc
        authn_requests_signed: true
        want_response_signed: true
        want_assertions_signed: true

        signing_algorithm: "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
        digest_algorithm: "http://www.w3.org/2001/04/xmlenc#sha256"

        # security
        only_use_keys_in_metadata: true

        # it depends by acr level, see spidsaml2.authn_request
        #force_authn: false

        name_id_format_allow_create: false
        name_id_format: 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient'
        requested_attribute_name_format: 'urn:oasis:names:tc:SAML:2.0:attrname-format:basic'
        allow_unknown_attributes: false

        # in production different workers do not share the same storage!
        allow_unsolicited: true

        # this instantiate the attribute_consuming_service
        required_attributes: ['spidCode',
                              'name',
                              'familyName',
                              'fiscalNumber',
                              'email']

        # optional_attributes: ['gender',
        #                       'companyName',
        #                       'registeredOffice',
        #                       'ivaCode',
        #                       'idCard',
        #                       'digitalAddress',
        #                       'placeOfBirth',
        #                       'countyOfBirth',
        #                       'dateOfBirth',
        #                       'address',
        #                       'mobilePhone',
        #                       'expirationDate']

        endpoints:
          assertion_consumer_service:
          - [<base_url>/<name>/acs/post, 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST']
          single_logout_service:
          - [<base_url>/<name>/ls/post/, 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST']
          discovery_response:
          - [<base_url>/<name>/disco, 'urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol']

  # disco_srv must be defined if there is more than one IdP in the metadata specified above
  # it uses pyFF
  #disco_srv: "http://ds.testunical.it:8001/role/idp.ds"
  disco_srv: "https://ds.auth.unical.it/role/idp.ds"
